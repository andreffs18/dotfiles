#!/usr/bin/env bash

# Remove all runnning processes for given name
# eg: $ killps chrome
function killps(){ 
    ps -ef | grep $1 | grep -v grep | awk '{print $2}' | xargs kill -9; 
}


# Find given string on given folder
# eg: $ findstr "documents.txt" .
function findstr(){
    find $1 \( -name node_modules -prune \) -o -name "*.py" -exec grep --color -Hn "$2" {} 2>/dev/null \;
}


# Shortcut to commit and push changes to current branch
# eg: $ gitcp "This is a commit message"
function gitcp(){
	current_branch=$(git symbolic-ref HEAD --short)
	echo "Commit Message: \"$1\"";
	echo "origin->$current_branch";
	git commit -am "$1";
	git push origin $current_branch;
	echo "Success!";
}


# Select random emoji and display it as "Hello" screen.
function olhaaqui(){
  FOLDER=~/.emoji
  # Create folder if doesnt exist
  mkdir -p $FOLDER
  EMOJIES=(‚úÖ üí© üöÄ üëÅ‚Äçüó® ‚ùóÔ∏è üò≠ üéâ üòò üëã ‚ö°Ô∏è)
  # Get random emoji from list
  EMOJI=${EMOJIES[$RANDOM % ${#EMOJIES[@]}]}
  # Check if emoji was previously used. If so use that, otherwise, download it.
  OLD_PWD=$(PWD)
  cd ~/
  if [ ! -f "$FOLDER/$EMOJI.txt" ] ; then
    echo "Downloading \"$EMOJI\"..."
    # Download image using Emoji API
    wget --quiet "https://xn--i-7iq.ws/emoji-image/$EMOJI.png?format\=emojione\&ar\=1x1" -O $FOLDER/$EMOJI.png
    # Convert image from .png to .jpg
    convert $FOLDER/$EMOJI.png $FOLDER/$EMOJI.jpg
    # Convert image to ascii art
    jp2a --size=96x46 $FOLDER/$EMOJI.jpg --output=$FOLDER/$EMOJI.txt
    # Replace all border "M" characters with empty space
    sed -i.bak "s/M/ /g" $FOLDER/$EMOJI.txt
    # Delete temp files
    rm $FOLDER/$EMOJI.png $FOLDER/$EMOJI.jpg $FOLDER/$EMOJI.txt.bak
  fi
  cd $OLD_PWD
  # Print image
  cat $FOLDER/$EMOJI.txt | lolcat
}

# Shortcut to get a random article from my Feedly account from the "Saved for Later" tag
function sfl(){
	python3 $HOME/.dotfiles/bin/feedly_read_later.py $@
}

# Utility to update FEEDLY_TOKEN and push it to keybase
# eg: $ update_feedly_token $FEEDLY_TOKEN
function update_feedly_token(){
  read -r -d '' FEEDLY << EOM
\n# Feedly TOKEN. Only valid for 30 days since creation
export FEEDLY_TOKEN=$1
EOM
  # Write new token into local .secrets and save them in keybase copy
  echo $FEEDLY | keybase fs write --append keybase://private/andreffs18/.secrets
  echo $FEEDLY >> ~/.secrets
  echo "‚úÖ Updated Feedly Token with sucess! Open new tab to reload configuration."
}

# WIP: Focus function that does the following:
# - Turn on "No Disturb Mode" on mac
# - Open Pomodor app with 25 minute
# - Setup alarm for 5 minute break
# - Start spotify "focus" playlist
# function focus(){}

log.success ".functions loaded with success!"